


ARM Macro Assembler    Page 1 


    1 00000000         ; @file mpi_asm_keil_cortex_m3.s
    2 00000000         ; @brief Cortex-M3 specific routines (Keil MDK-ARM compi
                       ler)
    3 00000000         ;
    4 00000000         ; @section License
    5 00000000         ;
    6 00000000         ; Copyright (C) 2010-2016 Oryx Embedded SARL. All rights
                        reserved.
    7 00000000         ;
    8 00000000         ; This file is part of CycloneCrypto Open.
    9 00000000         ;
   10 00000000         ; This program is free software; you can redistribute it
                        and/or
   11 00000000         ; modify it under the terms of the GNU General Public Li
                       cense
   12 00000000         ; as published by the Free Software Foundation; either v
                       ersion 2
   13 00000000         ; of the License, or (at your option) any later version.
                       
   14 00000000         ;
   15 00000000         ; This program is distributed in the hope that it will b
                       e useful,
   16 00000000         ; but WITHOUT ANY WARRANTY; without even the implied war
                       ranty of
   17 00000000         ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
                       See the
   18 00000000         ; GNU General Public License for more details.
   19 00000000         ;
   20 00000000         ; You should have received a copy of the GNU General Pub
                       lic License
   21 00000000         ; along with this program; if not, write to the Free Sof
                       tware Foundation,
   22 00000000         ; Inc., 51 Franklin Street, Fifth Floor, Boston, MA  021
                       10-1301, USA.
   23 00000000         ;
   24 00000000         ; @author Oryx Embedded SARL (www.oryx-embedded.com)
   25 00000000         ; @version 1.7.2
   26 00000000         
   27 00000000         ;**********
   28 00000000         ;* Macros *
   29 00000000         ;**********
   30 00000000         
   31 00000000                 macro
   32 00000000                 MUL_ACC_CORE
   33 00000000                 mov              r5, #0
   34 00000000                 ldr              r6, [r1], #4
   35 00000000                 umlal            r4, r5, r6, r3
   36 00000000                 ldr              r6, [r0]
   37 00000000                 adds             r6, r6, r4
   38 00000000                 adc              r4, r5, #0
   39 00000000                 str              r6, [r0], #4
   40 00000000                 mend
   41 00000000         
   42 00000000         ;***********
   43 00000000         ;* Exports *
   44 00000000         ;***********
   45 00000000         
   46 00000000                 export           mpiMulAccCore
   47 00000000         



ARM Macro Assembler    Page 2 


   48 00000000                 preserve8
   49 00000000                 thumb
   50 00000000         
   51 00000000                 area             |.text|, code, readonly
   52 00000000         
   53 00000000         ;*********************************
   54 00000000         ;* Multiply-accumulate operation *
   55 00000000         ;*********************************
   56 00000000         
   57 00000000                 align
   58 00000000         
   59 00000000         mpiMulAccCore
                               proc
   60 00000000 B470            push             {r4-r6}
   61 00000002 F04F 0400       mov              r4, #0
   62 00000006 2A08            cmp              r2, #8
   63 00000008 D363            blo              next1
   64 0000000A         loop1
   65 0000000A                 MUL_ACC_CORE
   33 0000000A F04F 0500       mov              r5, #0
   34 0000000E F851 6B04       ldr              r6, [r1], #4
   35 00000012 FBE6 4503       umlal            r4, r5, r6, r3
   36 00000016 6806            ldr              r6, [r0]
   37 00000018 1936            adds             r6, r6, r4
   38 0000001A F145 0400       adc              r4, r5, #0
   39 0000001E F840 6B04       str              r6, [r0], #4
   66 00000022                 MUL_ACC_CORE
   33 00000022 F04F 0500       mov              r5, #0
   34 00000026 F851 6B04       ldr              r6, [r1], #4
   35 0000002A FBE6 4503       umlal            r4, r5, r6, r3
   36 0000002E 6806            ldr              r6, [r0]
   37 00000030 1936            adds             r6, r6, r4
   38 00000032 F145 0400       adc              r4, r5, #0
   39 00000036 F840 6B04       str              r6, [r0], #4
   67 0000003A                 MUL_ACC_CORE
   33 0000003A F04F 0500       mov              r5, #0
   34 0000003E F851 6B04       ldr              r6, [r1], #4
   35 00000042 FBE6 4503       umlal            r4, r5, r6, r3
   36 00000046 6806            ldr              r6, [r0]
   37 00000048 1936            adds             r6, r6, r4
   38 0000004A F145 0400       adc              r4, r5, #0
   39 0000004E F840 6B04       str              r6, [r0], #4
   68 00000052                 MUL_ACC_CORE
   33 00000052 F04F 0500       mov              r5, #0
   34 00000056 F851 6B04       ldr              r6, [r1], #4
   35 0000005A FBE6 4503       umlal            r4, r5, r6, r3
   36 0000005E 6806            ldr              r6, [r0]
   37 00000060 1936            adds             r6, r6, r4
   38 00000062 F145 0400       adc              r4, r5, #0
   39 00000066 F840 6B04       str              r6, [r0], #4
   69 0000006A                 MUL_ACC_CORE
   33 0000006A F04F 0500       mov              r5, #0
   34 0000006E F851 6B04       ldr              r6, [r1], #4
   35 00000072 FBE6 4503       umlal            r4, r5, r6, r3
   36 00000076 6806            ldr              r6, [r0]
   37 00000078 1936            adds             r6, r6, r4
   38 0000007A F145 0400       adc              r4, r5, #0
   39 0000007E F840 6B04       str              r6, [r0], #4
   70 00000082                 MUL_ACC_CORE



ARM Macro Assembler    Page 3 


   33 00000082 F04F 0500       mov              r5, #0
   34 00000086 F851 6B04       ldr              r6, [r1], #4
   35 0000008A FBE6 4503       umlal            r4, r5, r6, r3
   36 0000008E 6806            ldr              r6, [r0]
   37 00000090 1936            adds             r6, r6, r4
   38 00000092 F145 0400       adc              r4, r5, #0
   39 00000096 F840 6B04       str              r6, [r0], #4
   71 0000009A                 MUL_ACC_CORE
   33 0000009A F04F 0500       mov              r5, #0
   34 0000009E F851 6B04       ldr              r6, [r1], #4
   35 000000A2 FBE6 4503       umlal            r4, r5, r6, r3
   36 000000A6 6806            ldr              r6, [r0]
   37 000000A8 1936            adds             r6, r6, r4
   38 000000AA F145 0400       adc              r4, r5, #0
   39 000000AE F840 6B04       str              r6, [r0], #4
   72 000000B2                 MUL_ACC_CORE
   33 000000B2 F04F 0500       mov              r5, #0
   34 000000B6 F851 6B04       ldr              r6, [r1], #4
   35 000000BA FBE6 4503       umlal            r4, r5, r6, r3
   36 000000BE 6806            ldr              r6, [r0]
   37 000000C0 1936            adds             r6, r6, r4
   38 000000C2 F145 0400       adc              r4, r5, #0
   39 000000C6 F840 6B04       str              r6, [r0], #4
   73 000000CA F1A2 0208       sub              r2, r2, #8
   74 000000CE 2A08            cmp              r2, #8
   75 000000D0 D29B            bhs              loop1
   76 000000D2         next1
   77 000000D2 2A01            cmp              r2, #1
   78 000000D4 D30D            blo              next2
   79 000000D6         loop2
   80 000000D6                 MUL_ACC_CORE
   33 000000D6 F04F 0500       mov              r5, #0
   34 000000DA F851 6B04       ldr              r6, [r1], #4
   35 000000DE FBE6 4503       umlal            r4, r5, r6, r3
   36 000000E2 6806            ldr              r6, [r0]
   37 000000E4 1936            adds             r6, r6, r4
   38 000000E6 F145 0400       adc              r4, r5, #0
   39 000000EA F840 6B04       str              r6, [r0], #4
   81 000000EE 1E52            subs             r2, r2, #1
   82 000000F0 D1F1            bne              loop2
   83 000000F2         next2
   84 000000F2 B144            cbz              r4, next3
   85 000000F4         loop3
   86 000000F4 6806            ldr              r6, [r0]
   87 000000F6 1936            adds             r6, r6, r4
   88 000000F8 F840 6B04       str              r6, [r0], #4
   89 000000FC F04F 0400       mov              r4, #0
   90 00000100 F154 0400       adcs             r4, r4, #0
   91 00000104 D1F6            bne              loop3
   92 00000106         next3
   93 00000106 BC70            pop              {r4-r6}
   94 00000108 4770            bx               r14
   95 0000010A                 endp
   96 0000010A         
   97 0000010A                 end
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\bulid\mpi_asm_keil_cortex_m3.d -o.\bulid\mpi_asm_keil_cortex_
m3.o -IF:\GitHub\BusBar-ST\BusBar-ST\demo\st\stm32f4_discovery\ssl_client_demo\
keil\RTE -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -ID:\Kei



ARM Macro Assembler    Page 4 


l_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 514" --predefine="ST
M32F40_41xxx SETA 1" --list=.\bulid\mpi_asm_keil_cortex_m3.lst ..\..\..\..\..\c
yclone_crypto\mpi_asm_keil_cortex_m3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      None
Comment: .text unused
loop1 0000000A

Symbol: loop1
   Definitions
      At line 64 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 75 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: loop1 used once
loop2 000000D6

Symbol: loop2
   Definitions
      At line 79 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 82 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: loop2 used once
loop3 000000F4

Symbol: loop3
   Definitions
      At line 85 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 91 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: loop3 used once
mpiMulAccCore 00000000

Symbol: mpiMulAccCore
   Definitions
      At line 59 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 46 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: mpiMulAccCore used once
next1 000000D2

Symbol: next1
   Definitions
      At line 76 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 63 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: next1 used once
next2 000000F2

Symbol: next2
   Definitions
      At line 83 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 78 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: next2 used once
next3 00000106

Symbol: next3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 92 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
   Uses
      At line 84 in file ..\..\..\..\..\cyclone_crypto\mpi_asm_keil_cortex_m3.s
Comment: next3 used once
8 symbols
341 symbols in table
